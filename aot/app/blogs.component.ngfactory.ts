/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../app/blogs.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './views/blogs.view.css.shim';
import * as import11 from '@angular/core/src/animation/animation_transition';
import * as import12 from '@angular/core/src/animation/animation_style_util';
import * as import13 from '@angular/core/src/animation/animation_sequence_player';
import * as import14 from '@angular/core/src/animation/animation_styles';
import * as import15 from '@angular/core/src/animation/animation_keyframe';
import * as import16 from '@angular/core/src/animation/animation_player';
export class Wrapper_BlogsComponent {
  context:import0.BlogsComponent;
  changed:boolean;
  constructor() {
    this.changed = false;
    this.context = new import0.BlogsComponent();
  }
  detectChangesInInputProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_BlogsComponent_Host:import2.RenderComponentType = (null as any);
class _View_BlogsComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _BlogsComponent_0_4:Wrapper_BlogsComponent;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_BlogsComponent_Host0,renderType_BlogsComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_3 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'ng-component',import4.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_BlogsComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._BlogsComponent_0_4 = new Wrapper_BlogsComponent();
    this._appEl_0.initComponent(this._BlogsComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._BlogsComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.BlogsComponent) && (0 === requestNodeIndex))) { return this._BlogsComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3:any = this._BlogsComponent_0_4.context.routeAnimation;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      var animationTransition_routeAnimation:any = this._appEl_0.componentView.componentType.animations['routeAnimation'](this,this._el_0,((this._expr_3 == import7.UNINITIALIZED)? 'void': this._expr_3),((currVal_3 == import7.UNINITIALIZED)? 'void': currVal_3));
      this._expr_3 = currVal_3;
    }
    this._BlogsComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._BlogsComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  detachInternal():void {
    var animationTransition_routeAnimation:any = this._appEl_0.componentView.componentType.animations['routeAnimation'](this,this._el_0,this._expr_3,'void');
  }
}
function viewFactory_BlogsComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_BlogsComponent_Host === (null as any))) { (renderType_BlogsComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_BlogsComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const BlogsComponentNgFactory:import9.ComponentFactory<import0.BlogsComponent> = new import9.ComponentFactory<import0.BlogsComponent>('ng-component',viewFactory_BlogsComponent_Host0,import0.BlogsComponent);
const styles_BlogsComponent:any[] = [import10.styles];
var BlogsComponent_routeAnimation_states:any = {
  '*': {opacity: 1},
  void: {}
}
;
function BlogsComponent_routeAnimation_factory(view:import1.AppView<any>,element:any,currentState:any,nextState:any):import11.AnimationTransition {
  view.animationContext.cancelActiveAnimation(element,'routeAnimation',(nextState == 'void'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = BlogsComponent_routeAnimation_states['*'];
  var startStateStyles:any = BlogsComponent_routeAnimation_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = BlogsComponent_routeAnimation_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  import12.renderStyles(element,view.renderer,import12.clearStyles(startStateStyles));
  if (((player == (null as any)) && ((currentState == 'void') && true))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          transform: 'translateX(-100%)',
          opacity: 0
        }

      ]
      )),import12.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import15.AnimationKeyframe(0,new import14.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{}]))),
        new import15.AnimationKeyframe(1,new import14.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),500,0,(null as any))]);
    totalTime = 500;
  }
  if (((player == (null as any)) && (true && (nextState == 'void')))) {
      player = new import13.AnimationSequencePlayer([view.renderer.animate(element,new import14.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
          new import15.AnimationKeyframe(0,new import14.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{
            transform: 'true',
            opacity: 'true'
          }
        ]))),
          new import15.AnimationKeyframe(1,new import14.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{
            transform: 'translateX(100%)',
            opacity: 0
          }
        ])))
      ]
    ,500,0,(null as any))]);
    totalTime = 500;
  }
  if ((player == (null as any))) { (player = new import16.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    import12.renderStyles(element,view.renderer,import12.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  view.animationContext.queueAnimation(element,'routeAnimation',player);
  return new import11.AnimationTransition(player,currentState,nextState,totalTime);
}
var renderType_BlogsComponent:import2.RenderComponentType = (null as any);
class _View_BlogsComponent0 extends import1.AppView<import0.BlogsComponent> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_BlogsComponent0,renderType_BlogsComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray2(2,'class','container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    this is blog\n',(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._text_2
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
}
export function viewFactory_BlogsComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.BlogsComponent> {
  if ((renderType_BlogsComponent === (null as any))) { (renderType_BlogsComponent = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.Emulated,styles_BlogsComponent,{routeAnimation: BlogsComponent_routeAnimation_factory})); }
  return new _View_BlogsComponent0(viewUtils,parentInjector,declarationEl);
}